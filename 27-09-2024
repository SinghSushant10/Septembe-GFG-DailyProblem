# K Sized Subarray Maximum
Given an array arr[] and an integer k. Find the maximum for each and every contiguous subarray of size k.
class Solution {
  
    public ArrayList<Integer> max_of_subarrays(int k, int arr[]) {
         ArrayList<Integer> ans = new ArrayList<>();
         Deque<Integer> dq = new ArrayDeque<>();
         for (int i = 0; i < arr.length; i++) {
    // If the first element of the deque is out of the current window (i-k), remove it.
            if (dq.size() != 0 && dq.getFirst() == i - k) {
                dq.removeFirst();
            }
    // Remove elements from the deque that are less than or equal to the current element.
            while (dq.size() != 0 && arr[dq.getLast()] <= arr[i]) {
                dq.removeLast();
            }
            dq.add(i);
// When the current index i is greater than or equal to k-1, it means the window is now fully of size k.
            if (i >= k - 1) {
                ans.add(arr[dq.getFirst()]);
            }
        }
        return ans;
    }
}
