#Parenthesis Checker

class Solution 
{
    //Function to check if brackets are balanced or not.
    static boolean ispar(String x)
    {
        // add your code here
        int n = x.length();
    // if string is odd then it's not valid 
        if(n%2!=0) return false;
    // Create a stack to hold opening brackets    
        Stack<Character> stack = new Stack<>();
        for(int i=0; i<n; i++){
            char ch = x.charAt(i);
    // If the character is an opening bracket, push it onto the stack
            if(ch=='(' || ch=='{' || ch=='['){
                stack.push(ch);
            }
            else{
    //If the stack is  empty means no matching then return false 
                if(stack.isEmpty()) {
                    return false;
                } 
    
                char top = stack.peek();
    // if there is  not match then return false
                if(ch==')'&& top !='('){
                    return false;
                }
                else if (ch=='}'&& top!='{'){
                    return false;
                }
                else if (ch==']'&& top!='['){
                    return false;
                }
                else{
    // If there is s a match pop the opening bracket from the stack                
                    stack.pop();
                }

            }
        }
    // If stack siae becomes 0 then return true
        return(stack.size()==0);
    }
}
