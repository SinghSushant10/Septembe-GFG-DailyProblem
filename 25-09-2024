#Palindrome Linked List

class Solution {
    // Function to check whether the list is palindrome.
    boolean isPalindrome(Node head) {
        // Your code here
    //two pointers (slow and fast) to find the middle of the linked list
    Node slow = head ,  fast=head.next;
    while(fast!=null && fast.next!=null){
        slow=slow.next;
        fast=fast.next.next;
    }
    //revrse the second half of the linklist
    Node curr=slow.next;
    Node nxt = null,prev=null;
    slow.next=null;
    while(curr!=null){
        nxt=curr.next;
        curr.next=prev;
        prev=curr;
        curr=nxt;
        }
    //  compare the first and second half 
    while(prev!=null){
        if(prev.data!=head.data){
            return false;
        }
        prev = prev.next;
        head=head.next;
    }
        return true;
    }
}
